apiVersion: v1
kind: Namespace
metadata:
  name: sjt
---
apiVersion: v1
kind: Secret
metadata:
  name: sjt-secrets
  namespace: sjt
type: Opaque
stringData:
  POSTGRES_PASSWORD: postgres
  ACCESS_TOKEN_SECRET: change-me-access
  REFRESH_TOKEN_SECRET: change-me-refresh
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sjt-config
  namespace: sjt
data:
  POSTGRES_USER: 'postgres'
  POSTGRES_DB: 'smart_job_tracker'
  DB_HOST: 'postgres'
  DB_PORT: '5432'
  DB_USER: 'postgres'
  DB_NAME: 'smart_job_tracker'
  VITE_API_URL: '/api'
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: sjt
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: sjt
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: sjt-config
                  key: POSTGRES_USER
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: sjt-config
                  key: POSTGRES_DB
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sjt-secrets
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              cpu: '100m'
              memory: '256Mi'
            limits:
              cpu: '500m'
              memory: '512Mi'
          livenessProbe:
            exec:
              command: ['pg_isready', '-U', 'postgres']
            initialDelaySeconds: 20
            periodSeconds: 10
          readinessProbe:
            exec:
              command: ['pg_isready', '-U', 'postgres']
            initialDelaySeconds: 5
            periodSeconds: 5
      terminationGracePeriodSeconds: 30
  volumeClaimTemplates:
    - metadata:
        name: pgdata
      spec:
        accessModes: ['ReadWriteOnce']
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: sjt
spec:
  type: ClusterIP
  ports:
    - port: 4000
      targetPort: 4000
  selector:
    app: api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: sjt
spec:
  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: ghcr.io/roeeblo/sjt-server:latest
          ports:
            - containerPort: 4000
          env:
            - name: NODE_ENV
              value: 'production'
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: sjt-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: sjt-config
                  key: DB_PORT
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: sjt-config
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sjt-secrets
                  key: POSTGRES_PASSWORD
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: sjt-config
                  key: DB_NAME
            - name: ACCESS_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: sjt-secrets
                  key: ACCESS_TOKEN_SECRET
            - name: REFRESH_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: sjt-secrets
                  key: REFRESH_TOKEN_SECRET
            - name: CORS_ORIGIN
              value: 'http://sjt.local,http://localhost:3000,http://localhost:5173'
          resources:
            requests:
              cpu: '100m'
              memory: '128Mi'
            limits:
              cpu: '500m'
              memory: '512Mi'
          livenessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 15
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: api-pdb
  namespace: sjt
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: api
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-hpa
  namespace: sjt
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
---
apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: sjt
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: sjt
spec:
  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: web
          image: ghcr.io/roeeblo/sjt-client:latest
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: '50m'
              memory: '64Mi'
            limits:
              cpu: '300m'
              memory: '256Mi'
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sjt-ingress
  namespace: sjt
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: 'true'
spec:
  ingressClassName: nginx
  rules:
    - host: sjt.local
      http:
        paths:
          - path: /api/?(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: api
                port:
                  number: 4000
          - path: /?(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: web
                port:
                  number: 80
